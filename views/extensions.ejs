<%
    body.id = ''
    pageTitle = "Extensions"
%>
<% include ./partials/head %>

        <p>This page covers additional extensions for XMPP-FTW.</p>

        <p>These extensions are loaded into the XMPP-FTW
        <a href="/demo" title="XMPP-FTW Demo">demo client</a>. This document follows the
        <a href="/manual#colour-conventions">conventions</a> of the main
        <a href="/manual">manual page</a>.</p>

        <div id="toc"></div>

        <h2>SuperFeedr</h2>

        <p>For more information about the Superfeedr XMPP API please see:
        <a href="http://superfeedr.com/documentation#pubsubhubbub" target="_blank">
        http://superfeedr.com/documentation#pubsubhubbub</a>.</p>

        <h3>Subscribe to a feed</h3>

        <p>Whilst superfeedr allows users to subscribe to multiple feeds in one request
        for simplicity this is restricted to a single subscription per request.</p>

        <pre class="out callback" message="xmpp.superfeedr.subscribe">
        socket.send(
            'xmpp.superfeedr.subscribe',
            {
                "feed": "http://www.evilprofessor.co.uk/feed",
             /* "jid": "website@evilprofessor.co.uk" */
            },
            function(error, data) { console.log(error, data) }
        )
        </pre>

        <p>If no JID is provided this defaults to the jid used to log in to the
        server with.</p>

        <p>If a subscription is successful then the response will look like the following:</p>

        <pre class="example">
        {
            "feed": "http://www.evilprofessor.co.uk/feed",
            "jid": "lloyd@evilprofessor.co.uk/sky",
            "title": "Building a time machine from a Delorean",
            "status": {
                "response": 200,
                "fetch": {
                    "last": "1955-11-05T06:30:11-08:00",
                    "next": "1985-10-27T01:22:38-08:00",
                    "period": "3600"
                },
                "parsed": "1985-10-27T10:30:00-08:00",
                "maintenance": "1985-10-27T09:59:00-08:00",
                "message": "9718 bytes fetched in 1.462708s : 2 new entries."
            }
        }
        </pre>

        <h3>Unsubscribe from a feed</h3>

        <pre class="out callback" message="xmpp.superfeedr.unsubscribe">
        socket.send(
            'xmpp.superfeedr.unsubscribe',
            {
                "feed": "https://github.com/xmpp-ftw.atom",
             /* "jid": "github@evilprofessor.co.uk" */
            },
            function(error, data) { console.log(error, data) }
        )
        </pre>

        <p>If there is no error `<em>data</em>` will simply be <b>true</b>.

        <h3>Get Subscriptions</h3>

        <pre class="out callback" message="xmpp.superfeedr.subscriptions">
        socket.send(
            'xmpp.superfeedr.subscriptions',
            {
              /* "page": 1 */
            },
            function(error, data) { console.log(error, data) }
        </pre>

        <p>Response will then appear as follows:</p>

        <pre class="example">
        [
            {
                "feed": "http://www.evilprofessor.co.uk/feed",
                "jid": "lloyd@evilprofessor.co.uk/sky",
                "title": "Building a time machine from a Delorean",
                "status": {
                    "response": 200,
                    "fetch": {
                        "last": "1955-11-05T06:30:11-08:00",
                        "next": "1985-10-27T01:22:38-08:00",
                        "period": "3600"
                    },
                    "parsed": "1985-10-27T10:30:00-08:00",
                    "maintenance": "1985-10-27T09:59:00-08:00",
                    "message": "9718 bytes fetched in 1.462708s : 2 new entries."
                }
            }
        ]
        </pre>

        <h3>Items</h3>

        <p>An example of an item is as follows:</p>

        <pre class="example">
        {
            "title": "Hello world",
            "id": "http://push-pub.appspot.com/feed/793002",
            "updated": "2013-05-12T15:34:15Z",
            "published": "2013-05-12T15:34:15Z",
            "content": {
                "type": "text",
                "content": "Get a notification"
            },
            "links": [
                {
                    "title": "Hello world",
                    "rel": "alternate",
                    "href": "http://push-pub.appspot.com/entry/793002",
                    "type": "text/html"
                }
            ]
        }
        </pre>

        <h4>New Item Notifications</h4>

        <pre class="in" message="xmpp.superfeedr.push">
        {
            meta: {
                "response": 200,
                "fetch": {
                    "last": "1955-11-05T06:30:11-08:00",
                    "next": "1985-10-27T01:22:38-08:00",
                    "period": "3600"
                },
                "parsed": "1985-10-27T10:30:00-08:00",
                "maintenance": "1985-10-27T09:59:00-08:00",
                "message": "9718 bytes fetched in 1.462708s : 2 new entries."
             },
             items: "items": [
                 { ... }
             ]
        }
        </pre>

        <h4>Item Retrieval</h4>

        <pre class="out callback" message="xmpp.superfeedr.retrieve">
        socket.send(
            'xmpp.superfeedr.retrieve',
            {
                "feed": "http://www.evilprofessor.co.uk/feed"
            },
            function(error, data) { console.log(error, data) }
        )
        </pre>

        <p>Example response:</p>

        <pre class="example">
        {
            meta: {
                "response": 200,
                "fetch": {
                    "last": "1955-11-05T06:30:11-08:00",
                    "next": "1985-10-27T01:22:38-08:00",
                    "period": "3600"
                },
                "parsed": "1985-10-27T10:30:00-08:00",
                "maintenance": "1985-10-27T09:59:00-08:00",
                "message": "9718 bytes fetched in 1.462708s : 2 new entries."
             },
             items: [
                { ... }
             ]
        }
        </pre>

        <h2>Buddycloud</h2>

        <p>The buddycloud extension details can no tbe found on their own page: 
        <a href="/manual/extensions/buddycloud" title="Buddycloud extension for XMPP-FTW">
        Buddycloud extension for XMPP-FTW</a>.</p>

        <h2>Fanout</h2>

        <h3>Log in</h3>

        <p>If not using the fanout gateway, then anonymous login is
        performed as follows:</p>

        <pre class="example">
        socket.send(
          'xmpp.login.anonymous',
          { jid: 'anon.fanout.io' }
        )
        </pre>

        <p>If using the fanout gateway then the payload can simply be
        any empty object.</p>

        <h3>Subscribe</h3>

        <p>Subscribe to fanout events as follows:</p>

        <pre class="out callback" message="fanout.fpp.subscribe">
        socket.send(
            'fanout.fpp.subscribe',
            {
                "channel": "your-channel",
                "realm": "your-realm",
             /* "to": "pubsub.fanout.io" */
            },
            function(error, data) { console.log(error, data) }
        )
        </pre>

        <p>On successful subscription `<em>data</em>` wil simply be
        <strong>true</strong>.</p>

        <p>Not providing <em>to</em> key will default it to the value
        in the example payload.</p>

        <h3>Unsubscribe</h3>

        <pre class="out callback" message="fanout.fpp.unsubscribe">
        socket.send(
            'fanout.fpp.unsubscribe',
            {
                "channel": "your-channel",
                "realm": "your-realm",
             /* "to": "pubsub.fanout.io" */
            },
            function(error, data) { console.log(error, data) }
        )
        </pre>

        <p>On successful unsubscribe `<em>data</em>` wil simply be
        <strong>true</strong>.</p>

        <p>Not providing <em>to</em> key will default it to the value
        in the example payload.</p>

        <h3>Event notifications</h3>

        <pre class="in" message="fanout.fpp.push">
        {
            "from": "pubsub.fanout.io",
            "channel": "your-channel",
            "realm": "your-realm",
            "content": {
                "json": { ... the JSON content ... }
            }
        }
        </pre>

<% include ./partials/footer %>
